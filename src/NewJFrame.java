/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelHasil = new javax.swing.JLabel();
        textFieldSuhu = new javax.swing.JTextField();
        comboBox1 = new javax.swing.JComboBox<>();
        comboBox2 = new javax.swing.JComboBox<>();
        buttonKonversi = new javax.swing.JButton();
        radioButtonDari = new javax.swing.JRadioButton();
        radioButtonKe = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Konversi Suhu");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Masukkan Suhu");

        labelHasil.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelHasil.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelHasil.setText("Hasil");

        textFieldSuhu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textFieldSuhu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldSuhuKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldSuhuKeyTyped(evt);
            }
        });

        comboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        comboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celcius", "Fahrenheit", "Reamur", "Kelvin" }));

        comboBox2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        comboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fahrenheit", "Reamur", "Kelvin", "Celcius" }));

        buttonKonversi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonKonversi.setText("Konversi Suhu");
        buttonKonversi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonKonversiActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioButtonDari);
        radioButtonDari.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        radioButtonDari.setSelected(true);
        radioButtonDari.setText("DARI");

        buttonGroup1.add(radioButtonKe);
        radioButtonKe.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        radioButtonKe.setText("KE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelHasil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonKonversi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioButtonKe)
                            .addComponent(jLabel1)
                            .addComponent(radioButtonDari))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldSuhu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldSuhu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioButtonDari)
                    .addComponent(comboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioButtonKe)
                    .addComponent(comboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonKonversi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelHasil)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void konversi() {
        // Memeriksa apakah text field untuk suhu kosong
        if (textFieldSuhu.getText().isEmpty()) {
            // Menampilkan pesan kesalahan jika suhu belum dimasukkan
            JOptionPane.showMessageDialog(this, "Masukkan suhu terlebih dahulu!");
        } else {
            // Mengambil input suhu dari text field dan mengonversinya ke tipe double
            double suhuInput = Double.parseDouble(textFieldSuhu.getText()),
                hasil = 0; // Inisialisasi variabel hasil untuk menyimpan hasil konversi
            String box1 = (String) comboBox1.getSelectedItem(), // Mengambil pilihan unit asal dari comboBox1
                box2 = (String) comboBox2.getSelectedItem(), // Mengambil pilihan unit tujuan dari comboBox2
                asal = box1, // Menyimpan unit asal
                tujuan = box2; // Menyimpan unit tujuan

            // Memeriksa apakah radioButton untuk konversi terbalik dipilih
            if (radioButtonKe.isSelected()) {
                asal = box2; // Jika terbalik, unit asal menjadi unit tujuan
                tujuan = box1; // dan unit tujuan menjadi unit asal
            }

            // Jika unit asal sama dengan unit tujuan, hasilnya sama dengan input
            if (asal == tujuan) {
                hasil = suhuInput;
            } 
            // Mengonversi dari Celcius ke unit tujuan yang dipilih
            else if (asal.equals("Celcius")) {
                if (tujuan.equals("Fahrenheit")) {
                    hasil = (suhuInput * 9 / 5) + 32; // Konversi ke Fahrenheit
                } else if (tujuan.equals("Reamur")) {
                    hasil = suhuInput * 4 / 5; // Konversi ke Reamur
                } else if (tujuan.equals("Kelvin")) {
                    hasil = suhuInput + 273.15; // Konversi ke Kelvin
                }
            } 
            // Mengonversi dari Fahrenheit ke unit tujuan yang dipilih
            else if (asal.equals("Fahrenheit")) {
                if (tujuan.equals("Celcius")) {
                    hasil = (suhuInput - 32) * 5 / 9; // Konversi ke Celcius
                } else if (tujuan.equals("Reamur")) {
                    hasil = (suhuInput - 32) * 4 / 9; // Konversi ke Reamur
                } else if (tujuan.equals("Kelvin")) {
                    hasil = (suhuInput - 32) * 5 / 9 + 273.15; // Konversi ke Kelvin
                }
            } 
            // Mengonversi dari Reamur ke unit tujuan yang dipilih
            else if (asal.equals("Reamur")) {
                if (tujuan.equals("Celcius")) {
                    hasil = suhuInput * 5 / 4; // Konversi ke Celcius
                } else if (tujuan.equals("Fahrenheit")) {
                    hasil = (suhuInput * 9 / 4) + 32; // Konversi ke Fahrenheit
                } else if (tujuan.equals("Kelvin")) {
                    hasil = (suhuInput * 5 / 4) + 273.15; // Konversi ke Kelvin
                }
            } 
            // Mengonversi dari Kelvin ke unit tujuan yang dipilih
            else if (asal.equals("Kelvin")) {
                if (tujuan.equals("Celcius")) {
                    hasil = suhuInput - 273.15; // Konversi ke Celcius
                } else if (tujuan.equals("Fahrenheit")) {
                    hasil = (suhuInput - 273.15) * 9 / 5 + 32; // Konversi ke Fahrenheit
                } else if (tujuan.equals("Reamur")) {
                    hasil = (suhuInput - 273.15) * 4 / 5; // Konversi ke Reamur
                }
            }

            // Menampilkan hasil konversi pada label
            labelHasil.setText("Hasil : " + hasil);
        }
    }
    
    private void buttonKonversiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonKonversiActionPerformed
        konversi();
    }//GEN-LAST:event_buttonKonversiActionPerformed

    private void textFieldSuhuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldSuhuKeyTyped
        char c = evt.getKeyChar(); // Mendapatkan karakter yang diketik
        // Memeriksa apakah karakter yang diketik bukan angka dan bukan tombol backspace
        if (!Character.isDigit(c) && c != java.awt.event.KeyEvent.VK_BACK_SPACE) {
            evt.consume(); // Menolak input karakter yang tidak valid
            // Menampilkan pesan kesalahan jika karakter yang dimasukkan tidak valid
            JOptionPane.showMessageDialog(this, "Hanya bisa memasukkan angka!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textFieldSuhuKeyTyped

    private void textFieldSuhuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldSuhuKeyReleased
        // Memeriksa apakah text field kosong setelah karakter dilepaskan
        if (textFieldSuhu.getText().isEmpty()) {
            labelHasil.setText("Hasil"); // Mengatur label hasil kembali ke keadaan awal
        } else {           
            konversi(); // Menghitung dan menampilkan hasil konversi suhu
        }
    }//GEN-LAST:event_textFieldSuhuKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buttonKonversi;
    private javax.swing.JComboBox<String> comboBox1;
    private javax.swing.JComboBox<String> comboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelHasil;
    private javax.swing.JRadioButton radioButtonDari;
    private javax.swing.JRadioButton radioButtonKe;
    private javax.swing.JTextField textFieldSuhu;
    // End of variables declaration//GEN-END:variables
}
